version: "3.8"

include:
  - path:
      - ./oidc-mock/oidc-mock.compose.yml

services:
  reverse-proxy:
    container_name: reverse-proxy
    image: traefik:v2.3
    command:
      # Enables the Web UI
      - "--api.dashboard=true"
      # Enabling docker provider
      - "--providers.docker"
      # Do not expose containers unless explicitly told so
      - "--providers.docker.exposedbydefault=false"
    ports:
      # Http
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "dave.relativeSubdomain=dashboard"
      - "dave.icon=simple-icons:traefikproxy"

  dave:
    image: theknarf/dave
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dave.rule=Host(`localhost`)"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  redis:
    container_name: redis
    image: redis:6.0-alpine
    restart: always
    ports:
      - 6379:6379
    command: >
      redis-server --save 20 1 --loglevel warning --requirepass mysecretpassword
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # GUI for checking whats in Redis
  redisinsight:
    container_name: redisinsight
    image: redis/redisinsight
    environment:
      RI_APP_PORT: 80
      RI_APP_HOST: '0.0.0.0'
    ports:
      - 8080:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redisinsight.rule=Host(`redisinsight.localhost`)"
      - "traefik.http.services.redisinsight.loadbalancer.server.port=80"
      - "dave.relativeSubdomain=redisinsight"
      - "dave.icon=devicon-plain:redis-wordmark"
    volumes:
      - redisinsight_cache:/data

  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: dialogporten
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 20s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin4.rule=Host(`pgadmin4.localhost`)"
      - "dave.relativeSubdomain=pgadmin4"
      - "dave.icon=simple-icons:postgresql"

  bff:
    container_name: bff
    restart: always
    build:
      context: .
      dockerfile: ./packages/bff/Dockerfile
      target: build
    environment:
      DB_CONNECTION_STRING: postgres://postgres:mysecretpassword@db:5432/dialogporten
      HOSTNAME: http://app.localhost
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      OIDC_URL: test.idporten.no
      SESSION_SECRET: IDPortenSessionSecret2023MoreLettersBlaBla
      TYPEORM_SYNCHRONIZE_ENABLED: true
      REDIS_CONNECTION_STRING: redis://:mysecretpassword@redis:6379/0
      PORT: 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bff.rule=Host(`app.localhost`) && PathPrefix(`/api`)"
      - "dave.relativeSubdomain=app"
      - "dave.icon=fa-brands:node"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      # bff-migration:
      #   condition: service_completed_successfully
    command: sh -c "pnpm --filter bff run docker"
    develop:
      watch:
        - action: sync
          path: ./packages/bff/
          target: /app/packages/bff/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: sync+restart
          path: ./packages/dialogporten-types-generated/
          target: /app/packages/dialogporten-types-generated/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: sync+restart
          path: ./packages/bff-types-generated/
          target: /app/packages/bff-types-generated/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: sync+restart
          path: ./packages/fastify-graphiql/
          target: /app/packages/fastify-graphiql/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: rebuild
          path: pnpm-lock.yaml
          target: /app/pnpm-lock.yaml

  bff-migration:
    container_name: bff-migration
    command: sh -c "pnpm --filter bff run docker"
    build:
      context: .
      dockerfile: ./packages/bff/Dockerfile
      target: build
    environment:
      DB_CONNECTION_STRING: postgres://postgres:mysecretpassword@db:5432/dialogporten
      HOSTNAME: http://app.localhost
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      OIDC_URL: test.idporten.no
      SESSION_SECRET: IDPortenSessionSecret2023MoreLettersBlaBla
      REDIS_CONNECTION_STRING: redis://:mysecretpassword@redis:6379/0
      TYPEORM_SYNCHRONIZE_ENABLED: true
      TYPEORM_MIGRATIONS: src/migrations/*.ts
      TYPEORM_MIGRATIONS_DIR: src/migrations
      MIGRATION_RUN: true
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
      target: build
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`app.localhost`)"
      - "dave.relativeSubdomain=app"
      - "dave.icon=fluent-mdl2:react-logo"
    develop:
      watch:
        - action: sync
          path: ./packages/frontend/
          target: /app/packages/frontend/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: sync+restart
          path: ./packages/bff-types-generated/
          target: /app/packages/bff-types-generated/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: rebuild
          path: pnpm-lock.yaml
          target: /app/pnpm-lock.yaml

  storybook:
    container_name: storybook
    build:
      context: .
      dockerfile: ./packages/storybook/Dockerfile
      target: build
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.storybook.rule=Host(`storybook.localhost`)"
      - "dave.relativeSubdomain=storybook"
      - "dave.icon=devicon-plain:storybook"
    develop:
      watch:
        - action: sync
          path: ./packages/storybook/
          target: /app/packages/storybook/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: sync
          path: ./packages/frontend/
          target: /app/packages/frontend/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: rebuild
          path: pnpm-lock.yaml
          target: /app/pnpm-lock.yaml

  docs:
    container_name: docs
    build:
      context: .
      dockerfile: ./packages/docs/Dockerfile
      target: build
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.docs.rule=Host(`docs.localhost`)"
      - "dave.relativeSubdomain=docs"
      - "dave.icon=simple-icons:docusaurus"
    develop:
      watch:
        - action: sync
          path: ./packages/docs/
          target: /app/packages/docs/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: rebuild
          path: pnpm-lock.yaml
          target: /app/pnpm-lock.yaml

volumes:
  pgadmin_data:
  postgres_data:
  redisinsight_cache:
    driver: local
