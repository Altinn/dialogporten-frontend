version: "3.8"

include:
  - path:
      - ./oidc-mock/oidc-mock.compose.yml

services:
  reverse-proxy:
    container_name: reverse-proxy
    image: traefik:v2.3
    command:
      # Enables the Web UI
      - "--api.dashboard=true"
      # Enabling docker provider
      - "--providers.docker"
      # Do not expose containers unless explicitly told so
      - "--providers.docker.exposedbydefault=false"
    ports:
      # Http
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "dave.relativeSubdomain=dashboard"
      - "dave.icon=simple-icons:traefikproxy"

  dave:
    image: theknarf/dave
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dave.rule=Host(`localhost`)"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: dialogporten
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 20s
      retries: 5

  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: mysecretpassword
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin4.rule=Host(`pgadmin4.localhost`)"
      - "dave.relativeSubdomain=pgadmin4"
      - "dave.icon=simple-icons:postgresql"

  bff:
    container_name: bff
    restart: always
    build:
      context: .
      dockerfile: ./packages/bff/Dockerfile
      target: build
    environment:
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
      PORT: 3000
      DEV_ENV: dev
      HOSTNAME: http://bff.localhost
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      OIDC_URL: test.idporten.no
      SCOPE: digdir:dialogporten.noconsent openid
      SESSION_SECRET: IDPortenSessionSecret2023
      COOKIE_NAME: oidc:test.idporten.no
      REFRESH_TOKEN_EXPIRES_IN: 120
      ACCESS_TOKEN_EXPIRES_IN: 60
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bff.rule=Host(`bff.localhost`)"
      - "dave.relativeSubdomain=bff"
      - "dave.icon=fa-brands:node"
    depends_on:
      db:
        condition: service_healthy
      bff-migration:
        condition: service_completed_successfully
    command: sh -c "pnpm --filter bff run docker"
    develop:
      watch:
        - action: sync
          path: ./packages/bff/
          target: /app/packages/bff/
          ignore:
            - node_modules/
            - .azure/
            - .git/

  bff-migration:
    container_name: bff-migration
    restart: always
    command: ["pnpm", "--filter", "bff", "run", "migration:run"]
    build:
      context: .
      dockerfile: ./packages/bff/Dockerfile
      target: build
    environment:
      DB_CONNECTION_STRING: postgres://postgres:mysecretpassword@db:5432/dialogporten
      PORT: 3000
      DEV_ENV: dev
      REDIRECT_URI: http://localhost:3000/auth/cb
      SCOPE: digdir:dialogporten.noconsent openid
      AUTH_URL: https://login.test.idporten.no/authorize
      ISSUER_URL: https://test.idporten.no/.well-known/openid-configuration
      TOKEN_ENDPOINT: https://test.idporten.no/token
      LOGOUT_REDIRECT_URI: http://localhost:3000/auth/loggedout
      LOGOUT_URI: https://login.test.idporten.no/logout
      SESSION_SECRET: IDPortenSessionSecret2023
      COOKIE_NAME: oidc:test.idporten.no
      REFRESH_TOKEN_EXPIRES_IN: 120
      ACCESS_TOKEN_EXPIRES_IN: 60
      TYPEORM_MIGRATIONS: src/migrations/*.ts
      TYPEORM_MIGRATIONS_DIR: src/migrations
    depends_on:
      db:
        condition: service_healthy

  bff-frontend-poc:
    container_name: bff-frontend-poc
    build:
      context: .
      dockerfile: ./packages/bff-frontend-poc/Dockerfile
      target: build
    environment:
      NODE_ENV: development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bff-frontend-poc.rule=Host(`bff-frontend-poc.localhost`)"
      - "dave.relativeSubdomain=bff-frontend-poc"
      - "dave.icon=fluent-mdl2:react-logo"
    depends_on:
      - bff
    develop:
      watch:
        - action: sync
          path: ./packages/bff-frontend-poc/
          target: /app/packages/bff-frontend-poc/
          ignore:
            - node_modules/
            - .azure/
            - .git/

  frontend-design-poc:
    container_name: frontend-design-poc
    build:
      context: .
      dockerfile: ./packages/frontend-design-poc/Dockerfile
      target: build
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-design-poc.rule=Host(`frontend-design-poc.localhost`)"
      - "dave.relativeSubdomain=frontend-design-poc"
      - "dave.icon=fluent-mdl2:react-logo"
    develop:
      watch:
        - action: sync
          path: ./packages/frontend-design-poc/
          target: /app/packages/frontend-design-poc/
          ignore:
            - node_modules/
            - .azure/
            - .git/

  storybook:
    container_name: storybook
    build:
      context: .
      dockerfile: ./packages/storybook/Dockerfile
      target: build
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.storybook.rule=Host(`storybook.localhost`)"
      - "dave.relativeSubdomain=storybook"
      - "dave.icon=devicon-plain:storybook"
    develop:
      watch:
        - action: sync
          path: ./packages/storybook/
          target: /app/packages/storybook/
          ignore:
            - node_modules/
            - .azure/
            - .git/
        - action: sync
          path: ./packages/frontend-design-poc/
          target: /app/packages/frontend-design-poc/
          ignore:
            - node_modules/
            - .azure/
            - .git/

  docs:
    container_name: docs
    build:
      context: .
      dockerfile: ./packages/docs/Dockerfile
      target: build
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.docs.rule=Host(`docs.localhost`)"
      - "dave.relativeSubdomain=docs"
      - "dave.icon=simple-icons:docusaurus"
    develop:
      watch:
        - action: sync
          path: ./packages/docs/
          target: /app/packages/docs/
          ignore:
            - node_modules/
            - .azure/
            - .git/

  bff-graphql-poc:
    container_name: bff-graphql-poc
    restart: always
    build:
      context: .
      dockerfile: ./packages/bff-graphql-poc/Dockerfile
      target: build
    command: sh -c "pnpm --filter bff-graphql-poc run dev:start"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bff-graphql-poc.rule=Host(`bff-graphql-poc.localhost`)"
      - "dave.relativeSubdomain=bff-graphql-poc"
      - "dave.icon=fa-brands:node"
    develop:
      watch:
        - action: sync
          path: ./packages/bff-graphql-poc/
          target: /app/packages/bff-graphql-poc/
          ignore:
            - node_modules/
            - .azure/
            - .git/
