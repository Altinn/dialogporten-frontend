name: PublishTestFrontend
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      publishArtifacts:
        required: false
        type: boolean
        default: false
  # push:
  #   branches: ['main']

jobs:
  publish-migration-and-iac-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Copy .azure directory to artifact
        run: |
          # Make sure the .azure directory exists
          if [ -d .azure ]; then
            # Create the destination directory if it doesn't exist
            mkdir -p /home/runner/work/dialogporten-frontend/dialogporten-frontend/artifacts
            # Copy the .azure directory to the destination
            cp -r .azure /home/runner/work/dialogporten-frontend/dialogporten-frontend/artifacts/.azure
          fi
        shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}

      - name: Upload .azure directory as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: ${{ github.workspace }}/artifacts

      # - name: Log in to the Container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-node-bff:${{ github.sha }}

  publish-docker-images:
    env:
      DOCKER_IMAGE_BASE: ghcr.io/digdir/dialogporten-frontend-
    needs: publish-migration-and-iac-frontend
    if: ${{inputs.publishArtifacts}}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false # TODO: set true
      matrix:
        include:
          - dockerfile: ./Dockerfile
            imageName: node-bff
          # - dockerfile: ./src/Digdir.Domain.Dialogporten.Service/Dockerfile
          #   imageName: service
          # - dockerfile: ./src/Digdir.Domain.Dialogporten.ChangeDataCapture/Dockerfile
          #   imageName: cdc
          # - dockerfile: ./src/Digdir.Domain.Dialogporten.Infrastructure/MigrationBundleDockerfile
          #   imageName: migration-bundle
          # - dockerfile: ./src/Digdir.Domain.Dialogporten.Infrastructure.MigrationJobVerifier/Dockerfile
          #   imageName: migration-verifier

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        if: ${{inputs.publishArtifacts}}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_BASE }}${{ matrix.imageName }}

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }},
            ${{ env.DOCKER_IMAGE_BASE }}${{ matrix.imageName }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: testa
        run: |
          echo "tags=${{ steps.meta.outputs.tags }}"
          echo "labels=${{ steps.meta.outputs.labels }}"
