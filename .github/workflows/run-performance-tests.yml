name: Run k6 performance tests

on:
  workflow_dispatch:
    inputs:
      vus:
        description: 'Number of VUS'
        required: true
        default: 1
        type: number
      evironment:
        description: "Environment to run the tests in"
        required: true
        default: "yt01"
        type: string
      configFilePath:
        description: "Configuration file for the test runs"
        required: true
        default: "packages/frontend/tests/performance/k6/conf-browser.yaml"
      testname:
        description: "Name of the test to run"
        required: true
        default: "browser-no-cookie"
        type: choice
        options:
          - browser-no-cookie
          - browser
        

      
  push:

permissions:
  id-token: write
  contents: read

jobs:
  k6-performance-tests:
    runs-on: ubuntu-latest
    environment: yt01 # TODO: No clue what to configure here; ask Andreas
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: OIDC Login to Azure Public Cloud
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true

      - name: Populate kubeconfig with k6 context
        id: populate_kubeconfig_with_k6_context
        shell: bash
        run: |
          if ! az aks install-cli; then
            echo "Failed to install kubectl CLI"
            exit 1
          fi

          if ! az aks get-credentials --resource-group k6tests-rg --name k6tests-cluster; then
            echo "Failed to populate kubeconfig"
            exit 1
          fi

          if ! kubelogin convert-kubeconfig -l azurecli; then
            echo "Failed to convert kubeconfig"
            exit 1
          fi

      - name: Generate k8s manifests
        uses: Altinn/altinn-platform/actions/generate-k6-manifests@main
        with:
          config_file: "${{ inputs.configFilePath || 'packages/frontend/tests/performance/k6/conf.yaml' }}" # No inputs when running as a cron
        env:
            BROWSER_VUS: ${{ inputs.vus }}
      - name: Apply k8s manifests
        shell: bash
        run: |
            testname=${{ inputs.evironment }}-${{ inputs.testname  }}
            kubectl apply --server-side=true -f .dist/yt01-browser-no-cookie -R
            kubectl get pods -l k6-test=${{ steps.generate_k8s_manifests.outputs.yt01-browser-no-cookie }} -o name