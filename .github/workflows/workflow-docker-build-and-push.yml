name: Build and push images to GCR

on:
  workflow_call:
    secrets:
      GCR_PASSWORD:
        description: "Password for Github Container Registry"
        required: true
    inputs:
      dockerImageBaseName:
        description: "Base image name for docker images"
        required: true
        type: string
      version:
        description: "Version to tag"
        required: true
        type: string

jobs:
  publish-docker-images:
    env:
      DOCKER_IMAGE_BASE_NAME: ${{ inputs.dockerImageBaseName }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - dockerfile: ./packages/bff/Dockerfile
            imageName: node-bff
          - dockerfile: ./packages/frontend/Dockerfile
            imageName: frontend

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GCR_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.DOCKER_IMAGE_BASE_NAME }}${{ matrix.imageName }}

      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build and push docker image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_BASE_NAME }}${{ matrix.imageName }}:${{ inputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.imageName }}
          cache-to: type=gha,mode=max,scope=${{ matrix.imageName }}
          build-args: |
            BUILD_VERSION=${{ inputs.version }}
