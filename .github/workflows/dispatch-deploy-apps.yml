name: Deploy Apps (Manual)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "test"
        type: choice
        options:
          - test (af.at.altinn.cloud)
          - yt01 (af.yt.altinn.cloud)
          - staging (af.tt.altinn.no)
          - prod (af.altinn.no)
      version:
        description: "Version to deploy (e.g., `1.23.4`)"
        required: true
        type: string
      runMigration:
        description: "Whether to run migration or not"
        default: false
        required: false
        type: boolean

run-name: Deploy apps ${{ inputs.environment }} v${{ inputs.version }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ inputs.environment }}

jobs:
  parse-environment:
    name: Parse environment name
    uses: ./.github/workflows/workflow-parse-environment.yml
    with:
      environment_input: ${{ inputs.environment }}

  generate-git-short-sha:
    name: Generate git short sha
    uses: ./.github/workflows/workflow-generate-git-short-sha.yml

  get-current-version:
    name: Get current version
    uses: ./.github/workflows/workflow-get-current-version.yml

  check-for-changes:
    name: Check for changes
    uses: ./.github/workflows/workflow-check-for-changes.yml

  deploy-apps:
    name: Deploy apps to ${{ needs.parse-environment.outputs.environment }}
    needs:
      - parse-environment
      - generate-git-short-sha
      - get-current-version
      - check-for-changes
    uses: ./.github/workflows/workflow-deploy-apps.yml
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
      AZURE_ENVIRONMENT_KEY_VAULT_NAME: ${{ secrets.AZURE_ENVIRONMENT_KEY_VAULT_NAME }}
      AZURE_CONTAINER_APP_ENVIRONMENT_NAME: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
      AZURE_APPLICATION_INSIGHTS_INSTRUMENTATION_KEY: ${{ secrets.AZURE_APPLICATION_INSIGHTS_INSTRUMENTATION_KEY }}
      OCP_APIM_SUBSCRIPTION_KEY: ${{ secrets.OCP_APIM_SUBSCRIPTION_KEY }}
    with:
      environment: ${{ needs.parse-environment.outputs.environment }}
      version: ${{ inputs.version }}
      runMigration: ${{ inputs.runMigration }}
