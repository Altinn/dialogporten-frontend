name: Publish NPM Package

on:
  workflow_call:
    inputs:
      pathToPackage:
        required: true
        type: string
      version:
        required: true
        type: string
      ref:
        required: false
        type: string
        default: ${{ github.ref }}
    secrets:
      NPM_TOKEN:
        required: true

env:
  WORKING_DIRECTORY: ${{ inputs.pathToPackage }}

permissions:
  id-token: write

jobs:
  check-published-version:
    runs-on: ubuntu-latest
    outputs:
      version-exists: ${{ steps.check-published-version.outputs.version-exists }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: 'Setting up Node'
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version

      - name: Fetch package name
        id: fetch-package-name
        run: echo "PACKAGE_NAME=$(jq -r '.name' package.json)" >> $GITHUB_ENV
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Check if version exists on NPM
        id: check-published-version
        run: |
          if npm view "${{ env.PACKAGE_NAME }}@${{ inputs.version }}" > /dev/null 2>&1; then
            echo "version-exists=true" >> $GITHUB_OUTPUT
            echo "Version ${{ inputs.version }} already exists"
          else
            echo "version-exists=false" >> $GITHUB_OUTPUT
            echo "Version ${{ inputs.version }} does not exist"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-to-npm:
    runs-on: ubuntu-latest
    needs: check-published-version
    if: needs.check-published-version.outputs.version-exists == 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: 'Installing Dependencies'
        uses: ./.github/actions/install

      - name: Update package version
        run: |
          jq '.version = "${{ inputs.version }}"' package.json > temp.json
          mv temp.json package.json
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Publish package
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
