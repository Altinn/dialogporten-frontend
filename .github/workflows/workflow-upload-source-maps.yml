name: Upload Source Maps to Application Insights

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      version:
        required: true
        type: string
      appInsightsName:
        required: true
        type: string
      resourceGroupName:
        required: true
        type: string
      ref:
        description: "The branch or tag ref to use. Using default checkout ref if not provided."
        required: false
        default: ${{ github.ref }}
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  upload-source-maps:
    name: Upload source maps to Application Insights (${{ inputs.environment }})
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.ref }}

      - name: Install dependencies
        uses: ./.github/actions/install

      - name: Build frontend with source maps
        run: pnpm --filter frontend run build
        working-directory: ${{ github.workspace }}

      - name: Azure Login
        uses: ./.github/actions/azure-login
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get storage account name
        id: get-storage
        run: |
          STORAGE_ACCOUNT_NAME=$(az deployment group show \
            --resource-group "${{ inputs.resourceGroupName }}" \
            --name "main" \
            --query "properties.outputs.storageAccountName.value" \
            --output tsv)
          
          echo "storage_account_name=$STORAGE_ACCOUNT_NAME" >> $GITHUB_OUTPUT

      - name: Create blob container for source maps
        run: |
          # Create a private blob container for source maps
          az storage container create \
            --account-name "${{ steps.get-storage.outputs.storage_account_name }}" \
            --name "sourcemaps-${{ inputs.environment }}" \
            --public-access off \
            --auth-mode login

      - name: Upload source maps to blob storage
        id: upload-source-maps
        run: |
          cd packages/frontend/dist/assets
          
          # Upload each source map file with version prefix
          for mapfile in *.map; do
            if [ -f "$mapfile" ]; then
              echo "Uploading $mapfile..."
              
              # Get the corresponding JS file name
              jsfile="${mapfile%.map}"
              
              # Upload with version prefix
              az storage blob upload \
                --account-name "${{ steps.get-storage.outputs.storage_account_name }}" \
                --container-name "sourcemaps-${{ inputs.environment }}" \
                --name "${{ inputs.version }}/$mapfile" \
                --file "$mapfile" \
                --auth-mode login
              
              echo "Uploaded $mapfile successfully"
            fi
          done
          
          echo "source_maps_uploaded=true" >> $GITHUB_OUTPUT

      - name: Configure Application Insights to use source maps
        run: |
          # Configure Application Insights to read source maps from blob storage
          # This is done by setting the source map URL in the Application Insights configuration
          # The URL format is: https://<storage-account>.blob.core.windows.net/<container>/<version>/<source-map-file>
          
          STORAGE_URL="https://${{ steps.get-storage.outputs.storage_account_name }}.blob.core.windows.net/sourcemaps-${{ inputs.environment }}"
          
          echo "Source maps are available at: $STORAGE_URL"
          echo "Application Insights will automatically detect and use source maps from this location"

      - name: Note about source map cleanup
        run: |
          echo "Source map cleanup is handled automatically by Application Insights"
          echo "The service will retain source maps for a configurable period"

      - name: Logout from Azure
        if: always()
        continue-on-error: true
        run: az logout 